<--- java script execution context --->

1.  {} ---> global execution context this put inside the (this)

2. js is the r threaded 

3. global execution context 
4. functional execution context 
*  (eval execution context) 

#  js runs in two phase

ist.  memory creation phase
iind. execution phase

=> program.....

let val1 = 10
let val2 = 5
function addNum(num1, num2){
    let total = num1 + num2
    return total
}
let result = addNum(val1, val2)
let result = addNum(10,2)

step1 -> global phase

step2 -> memory phase

line 1 - val1 = undefined
line 2 - val 2 = undefined
line 3 - definition
line 7 - undefined
line 8 - undefined


step3 -> execution phase

line 1 - val1 = 10 
line 2 - val2 = 5
addNum ----->new executional context / new variable enviroment + execution thread 
             |----------------------------------------------|
             | memoryphase                  execution phase |
             | val1 - undefined            num1 = 10        |
             | val2 - undefined            num = 5          |
             | total - undefined           total = 15       |
             |----------------------------------------------|
             this execution context will delete automatically when it complete the task and pass the result to the execution phase

line 7 - result = 15

             |----------------------------------------------|
             | memoryphase                  execution phase |
             | val1 - undefined            num1 = 10        |
             | val2 - undefined            num = 2          |
             | total - undefined           total = 12       |
             |----------------------------------------------|
             this execution context will delete automatically when it complete the task and pass the result to the execution phase

line 8 - result = 12


# call stack
work on the list in frist out 


|                |
|three()         |
|________________|
|two()           |     LIFO = last in frist out 
|________________|
|one()           |
|________________|
|global execution|
|________________| 



